<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>刷题 - 分类 - 百乐的编程学习</title>
        <link>https://www.leyoubaloy.xyz/categories/%E5%88%B7%E9%A2%98/</link>
        <description>刷题 - 分类 - 百乐的编程学习</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 19 Apr 2022 16:45:09 &#43;0800</lastBuildDate><atom:link href="https://www.leyoubaloy.xyz/categories/%E5%88%B7%E9%A2%98/" rel="self" type="application/rss+xml" /><item>
    <title>Leetcode821:字符的最短距离——两次遍历</title>
    <link>https://www.leyoubaloy.xyz/posts/leetcode821%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%9D%E7%A6%BB%E4%B8%A4%E6%AC%A1%E9%81%8D%E5%8E%86/</link>
    <pubDate>Tue, 19 Apr 2022 16:45:09 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.leyoubaloy.xyz/posts/leetcode821%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E7%9F%AD%E8%B7%9D%E7%A6%BB%E4%B8%A4%E6%AC%A1%E9%81%8D%E5%8E%86/</guid>
    <description><![CDATA[题目 https://leetcode-cn.com/problems/shortest-distance-to-a-character/ 题解 遍历k次，取最小 思路：创建结果数组v，赋一个很大的初始值（s.size()+1就够了）。首先遍历一遍s，记录下每个c的位置ci。然]]></description>
</item><item>
    <title>Leetcode386:字典序排数——dfs、迭代</title>
    <link>https://www.leyoubaloy.xyz/posts/leetcode386%E5%AD%97%E5%85%B8%E5%BA%8F%E6%8E%92%E6%95%B0dfs%E8%BF%AD%E4%BB%A3/</link>
    <pubDate>Mon, 18 Apr 2022 17:26:02 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.leyoubaloy.xyz/posts/leetcode386%E5%AD%97%E5%85%B8%E5%BA%8F%E6%8E%92%E6%95%B0dfs%E8%BF%AD%E4%BB%A3/</guid>
    <description><![CDATA[题目 https://leetcode-cn.com/problems/lexicographical-numbers/ 日常做不出来😭 题解 什么是字典序？（原谅我到了大二才搞明白什么是字典序😂） 对于字符串，先按首字符排序，如果首字符相同，再按第二个字符排序]]></description>
</item><item>
    <title>Leetcode5:最长回文子串——中心扩展法</title>
    <link>https://www.leyoubaloy.xyz/posts/leetcode5%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2%E4%B8%AD%E5%BF%83%E6%89%A9%E5%B1%95%E6%B3%95/</link>
    <pubDate>Sun, 17 Apr 2022 10:36:32 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.leyoubaloy.xyz/posts/leetcode5%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2%E4%B8%AD%E5%BF%83%E6%89%A9%E5%B1%95%E6%B3%95/</guid>
    <description><![CDATA[题目 https://leetcode-cn.com/problems/longest-palindromic-substring/ 题解 中心扩展法，看到这个名字我就知道该怎么做了，然后做了二十分钟&hellip;.debug总是出问题&hellip; 这道题需要注意的]]></description>
</item><item>
    <title>Leetcode451:根据字符出现频率排序——桶排序</title>
    <link>https://www.leyoubaloy.xyz/posts/leetcode451%E6%A0%B9%E6%8D%AE%E5%AD%97%E7%AC%A6%E5%87%BA%E7%8E%B0%E9%A2%91%E7%8E%87%E6%8E%92%E5%BA%8F%E6%A1%B6%E6%8E%92%E5%BA%8F/</link>
    <pubDate>Fri, 15 Apr 2022 18:00:29 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.leyoubaloy.xyz/posts/leetcode451%E6%A0%B9%E6%8D%AE%E5%AD%97%E7%AC%A6%E5%87%BA%E7%8E%B0%E9%A2%91%E7%8E%87%E6%8E%92%E5%BA%8F%E6%A1%B6%E6%8E%92%E5%BA%8F/</guid>
    <description><![CDATA[题目 https://leetcode-cn.com/problems/sort-characters-by-frequency/ 题解 思路 用一个哈希map先统计每个字符出现的次数，然后再排序，最后拼接字符串。排序的方法多种多样，因为字符是有限的（26个小写，26个]]></description>
</item><item>
    <title>Leetcode560:和为K的子数组——前缀和、哈希表</title>
    <link>https://www.leyoubaloy.xyz/posts/leetcode560%E5%92%8C%E4%B8%BAk%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E5%89%8D%E7%BC%80%E5%92%8C%E5%93%88%E5%B8%8C%E8%A1%A8/</link>
    <pubDate>Sat, 09 Apr 2022 12:08:07 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.leyoubaloy.xyz/posts/leetcode560%E5%92%8C%E4%B8%BAk%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84%E5%89%8D%E7%BC%80%E5%92%8C%E5%93%88%E5%B8%8C%E8%A1%A8/</guid>
    <description><![CDATA[题目 https://leetcode-cn.com/problems/subarray-sum-equals-k/ 不能用滑动窗口，因为右指针不一定递增。不能用dp，会超时溢出。 题解 枚举法 枚举法会超时，但可以为我们提供思路。 考虑以j结尾和为 k 的连续子]]></description>
</item><item>
    <title>C&#43;&#43;和python常用函数</title>
    <link>https://www.leyoubaloy.xyz/posts/c&#43;&#43;%E5%92%8Cpython%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/</link>
    <pubDate>Fri, 08 Apr 2022 20:23:24 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.leyoubaloy.xyz/posts/c&#43;&#43;%E5%92%8Cpython%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/</guid>
    <description><![CDATA[c++常用函数 sort(v.begin(),v.end()) // 向量v vector&lt;int&gt; v; sort(v.begin(),v.end()) // 数组a sort(a,a+n); // 可以加参数cmp // 比如对intervals = [[1,2],[2,3],[3,4],[1,3]] 中每个向量第一个元素按从小到大排序 sort(intervals.begin(), intervals.end(), [](const auto&amp; u, const auto&amp; v) {]]></description>
</item><item>
    <title>Leetcode3:无重复字符的最长子串——滑动窗口</title>
    <link>https://www.leyoubaloy.xyz/posts/leetcode3%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/</link>
    <pubDate>Fri, 08 Apr 2022 19:59:03 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.leyoubaloy.xyz/posts/leetcode3%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/</guid>
    <description><![CDATA[题目 https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/ 乍一看好像做过，再一看好像不会😂 题解 暴力法 设字符串为s，假如我们要找的这段没有重复字符的序列是从i起始，到rk结束（即s[i:rk]）]]></description>
</item><item>
    <title>Leetcode347:前K个高频元素——优先队列、堆</title>
    <link>https://www.leyoubaloy.xyz/posts/leetcode347%E5%89%8Dk%E4%B8%AA%E9%AB%98%E9%A2%91%E5%85%83%E7%B4%A0%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E5%A0%86/</link>
    <pubDate>Thu, 07 Apr 2022 16:55:15 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.leyoubaloy.xyz/posts/leetcode347%E5%89%8Dk%E4%B8%AA%E9%AB%98%E9%A2%91%E5%85%83%E7%B4%A0%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97%E5%A0%86/</guid>
    <description><![CDATA[题目 https://leetcode-cn.com/problems/top-k-frequent-elements/ 从这题开始学会使用堆 题解 堆（heap） 大顶堆：父节点的值大于子节点的值。 小顶堆：父节点的值小于子节点的值。 性质：根节点一定是最大（最小]]></description>
</item><item>
    <title>Leetcode310:最小高度树</title>
    <link>https://www.leyoubaloy.xyz/posts/leetcode310%E6%9C%80%E5%B0%8F%E9%AB%98%E5%BA%A6%E6%A0%91/</link>
    <pubDate>Wed, 06 Apr 2022 15:07:06 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.leyoubaloy.xyz/posts/leetcode310%E6%9C%80%E5%B0%8F%E9%AB%98%E5%BA%A6%E6%A0%91/</guid>
    <description><![CDATA[题目 https://leetcode-cn.com/problems/minimum-height-trees/ 这是一道理论性很强，代码也很有技巧性的“中等”难度题目。 题解 暴力法 献上我的超时代码： class Solution: def findMinHeightTrees(self, n: int, edges: List[List[int]]) -&gt; List[int]: find = {} for edge in edges: if edge[0] in find.keys(): find[edge[0]].append(edge[1]) else: find[edge[0]] =]]></description>
</item><item>
    <title>Leetcode2:两数相加——链表</title>
    <link>https://www.leyoubaloy.xyz/posts/leetcode2%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0%E9%93%BE%E8%A1%A8/</link>
    <pubDate>Tue, 05 Apr 2022 16:50:12 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.leyoubaloy.xyz/posts/leetcode2%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0%E9%93%BE%E8%A1%A8/</guid>
    <description><![CDATA[题目 https://leetcode-cn.com/problems/add-two-numbers/ 这道题主要是debug 题解 我自己写的代码： /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public: ListNode*]]></description>
</item></channel>
</rss>

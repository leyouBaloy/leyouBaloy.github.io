<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>刷题 - 分类 - 孙百乐的编程学习</title>
        <link>https://www.leyoubaloy.xyz/categories/%E5%88%B7%E9%A2%98/</link>
        <description>刷题 - 分类 - 孙百乐的编程学习</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 28 Feb 2022 19:35:21 &#43;0800</lastBuildDate><atom:link href="https://www.leyoubaloy.xyz/categories/%E5%88%B7%E9%A2%98/" rel="self" type="application/rss+xml" /><item>
    <title>最大子数组和——动态规划、分治</title>
    <link>https://www.leyoubaloy.xyz/posts/%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E5%88%86%E6%B2%BB/</link>
    <pubDate>Mon, 28 Feb 2022 19:35:21 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.leyoubaloy.xyz/posts/%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E5%88%86%E6%B2%BB/</guid>
    <description><![CDATA[题目 来自：https://leetcode-cn.com/problems/maximum-subarray/ 53. 最大子数组和 难度简单4424]]></description>
</item><item>
    <title>存在重复元素——排序、哈希</title>
    <link>https://www.leyoubaloy.xyz/posts/%E5%AD%98%E5%9C%A8%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%E6%8E%92%E5%BA%8F%E5%93%88%E5%B8%8C/</link>
    <pubDate>Sat, 26 Feb 2022 19:22:16 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.leyoubaloy.xyz/posts/%E5%AD%98%E5%9C%A8%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%E6%8E%92%E5%BA%8F%E5%93%88%E5%B8%8C/</guid>
    <description><![CDATA[题目 该题来自：https://leetcode-cn.com/problems/contains-duplicate/ [217. 存在重复元素] 难度简]]></description>
</item><item>
    <title>找到小镇的法官——图论入门</title>
    <link>https://www.leyoubaloy.xyz/posts/%E6%89%BE%E5%88%B0%E5%B0%8F%E9%95%87%E7%9A%84%E6%B3%95%E5%AE%98%E5%9B%BE%E8%AE%BA%E5%85%A5%E9%97%A8/</link>
    <pubDate>Fri, 25 Feb 2022 18:49:18 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.leyoubaloy.xyz/posts/%E6%89%BE%E5%88%B0%E5%B0%8F%E9%95%87%E7%9A%84%E6%B3%95%E5%AE%98%E5%9B%BE%E8%AE%BA%E5%85%A5%E9%97%A8/</guid>
    <description><![CDATA[题目 来源：力扣（LeetCode） 链接：https://leetcode-cn.com/problems/find-the-town-jud]]></description>
</item><item>
    <title>完全背包问题——动态规划——这道题解是认真写的qwq</title>
    <link>https://www.leyoubaloy.xyz/posts/%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</link>
    <pubDate>Wed, 23 Feb 2022 19:24:06 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.leyoubaloy.xyz/posts/%E5%AE%8C%E5%85%A8%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</guid>
    <description><![CDATA[完全背包问题和01背包问题的区别就是完全背包问题不限制物体的数量。 题目链接：https://www.acwing.com/problem/c]]></description>
</item><item>
    <title>01背包问题——动态规划</title>
    <link>https://www.leyoubaloy.xyz/posts/01%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</link>
    <pubDate>Tue, 22 Feb 2022 16:42:16 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.leyoubaloy.xyz/posts/01%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</guid>
    <description><![CDATA[题目来自：https://www.acwing.com/problem/search/1/?csrfmiddlewaretoken=UwJf]]></description>
</item><item>
    <title>租用游艇——动态规划</title>
    <link>https://www.leyoubaloy.xyz/posts/%E7%A7%9F%E7%94%A8%E6%B8%B8%E8%89%87%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</link>
    <pubDate>Mon, 21 Feb 2022 20:19:11 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.leyoubaloy.xyz/posts/%E7%A7%9F%E7%94%A8%E6%B8%B8%E8%89%87%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</guid>
    <description><![CDATA[洛谷P1359 租用游艇 https://www.luogu.com.cn/problem/solution/P1359 题目描述 长江游艇俱乐部在长江上设置了 nn 个游艇出租站 1,2,\cdots,n1,2,⋯,n。游客可在这些游艇出租站租用]]></description>
</item><item>
    <title>全国高校AI知识竞赛UPC赛区获奖通知</title>
    <link>https://www.leyoubaloy.xyz/posts/%E5%85%A8%E5%9B%BD%E9%AB%98%E6%A0%A1ai%E7%9F%A5%E8%AF%86%E7%AB%9E%E8%B5%9Bupc%E8%B5%9B%E5%8C%BA%E8%8E%B7%E5%A5%96%E9%80%9A%E7%9F%A5/</link>
    <pubDate>Wed, 29 Sep 2021 23:37:12 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://www.leyoubaloy.xyz/posts/%E5%85%A8%E5%9B%BD%E9%AB%98%E6%A0%A1ai%E7%9F%A5%E8%AF%86%E7%AB%9E%E8%B5%9Bupc%E8%B5%9B%E5%8C%BA%E8%8E%B7%E5%A5%96%E9%80%9A%E7%9F%A5/</guid>
    <description><![CDATA[获奖名单： 排名不分先后，恭喜以上获奖同学。 领奖须知： **第一步：**扫描二维码，注册飞桨人工智能训练平台aistudio（需要手机号） **第]]></description>
</item><item>
    <title>python面向对象课程</title>
    <link>https://www.leyoubaloy.xyz/posts/python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AF%BE%E7%A8%8B/</link>
    <pubDate>Tue, 02 Feb 2021 10:33:46 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://www.leyoubaloy.xyz/posts/python%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%AF%BE%E7%A8%8B/</guid>
    <description><![CDATA[https://www.bilibili.com/video/BV1A4411v7b2?p=34&amp;spm_id_from=pageDriver 这个课讲得真是太好了，很少能有把复杂抽象的知识讲得这么清楚的老师 打算一口气把这个看完 2月3日 现在看到62集了，看到这个人的笔记记得还不错，]]></description>
</item><item>
    <title>字符串与数字之间的转换</title>
    <link>https://www.leyoubaloy.xyz/posts/%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%8E%E6%95%B0%E5%AD%97%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/</link>
    <pubDate>Fri, 01 Jan 2021 21:15:27 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://www.leyoubaloy.xyz/posts/%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%8E%E6%95%B0%E5%AD%97%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/</guid>
    <description><![CDATA[方法一（利用的stringstream，可以是浮点数） 数字to字符串 #include &lt;iostream&gt; #include &lt;sstream&gt; using namespace std; int main() { double x; string str; stringstream ss; cin &gt;&gt; x; ss &lt;&lt; x; ss &gt;&gt; str; cout &lt;&lt; str; return 0; } 字符串to]]></description>
</item><item>
    <title>给string对象插入字符</title>
    <link>https://www.leyoubaloy.xyz/posts/%E7%BB%99string%E5%AF%B9%E8%B1%A1%E6%8F%92%E5%85%A5%E5%AD%97%E7%AC%A6/</link>
    <pubDate>Mon, 28 Dec 2020 16:52:10 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://www.leyoubaloy.xyz/posts/%E7%BB%99string%E5%AF%B9%E8%B1%A1%E6%8F%92%E5%85%A5%E5%AD%97%E7%AC%A6/</guid>
    <description><![CDATA[#include &lt;bits/stdc++.h&gt; using namespace std; int main() { string s; s = &quot;123456&quot;; string::iterator it; it=s.begin(); s.insert(it+1,'p'); //把p插到第1个字符前，从0开始计数 cout &lt;&lt; s &lt;&lt; endl; return 0; } 运行结果 1p23456 Process returned 0 (0x0) execution time : 0.011 s Press any key to continue. 看了课本后面的]]></description>
</item></channel>
</rss>

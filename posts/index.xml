<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - 孙百乐的编程学习</title>
        <link>https://www.leyoubaloy.xyz/posts/</link>
        <description>所有文章 | 孙百乐的编程学习</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 07 Apr 2022 10:31:40 &#43;0800</lastBuildDate><atom:link href="https://www.leyoubaloy.xyz/posts/" rel="self" type="application/rss+xml" /><item>
    <title>测试文章</title>
    <link>https://www.leyoubaloy.xyz/posts/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</link>
    <pubDate>Thu, 07 Apr 2022 10:31:40 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.leyoubaloy.xyz/posts/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</guid>
    <description><![CDATA[巴拉巴拉]]></description>
</item><item>
    <title>Leetcode310:最小高度树</title>
    <link>https://www.leyoubaloy.xyz/posts/leetcode310%E6%9C%80%E5%B0%8F%E9%AB%98%E5%BA%A6%E6%A0%91/</link>
    <pubDate>Wed, 06 Apr 2022 15:07:06 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.leyoubaloy.xyz/posts/leetcode310%E6%9C%80%E5%B0%8F%E9%AB%98%E5%BA%A6%E6%A0%91/</guid>
    <description><![CDATA[题目 https://leetcode-cn.com/problems/minimum-height-trees/ 这是一道理论性很强，代码也很有技巧性的“中等”难度题目。 题解 暴力法 献上我的超时代码： class Solution: def findMinHeightTrees(self, n: int, edges: List[List[int]]) -&gt; List[int]: find = {} for edge in edges: if edge[0] in find.keys(): find[edge[0]].append(edge[1]) else: find[edge[0]] =]]></description>
</item><item>
    <title>Leetcode2:两数相加——链表</title>
    <link>https://www.leyoubaloy.xyz/posts/leetcode2%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0%E9%93%BE%E8%A1%A8/</link>
    <pubDate>Tue, 05 Apr 2022 16:50:12 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.leyoubaloy.xyz/posts/leetcode2%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0%E9%93%BE%E8%A1%A8/</guid>
    <description><![CDATA[题目 https://leetcode-cn.com/problems/add-two-numbers/ 这道题主要是debug 题解 我自己写的代码： /** * Definition for singly-linked list. * struct ListNode { * int val; * ListNode *next; * ListNode() : val(0), next(nullptr) {} * ListNode(int x) : val(x), next(nullptr) {} * ListNode(int x, ListNode *next) : val(x), next(next) {} * }; */ class Solution { public: ListNode*]]></description>
</item><item>
    <title>Leetcode230:二叉搜索树中第K小的元素</title>
    <link>https://www.leyoubaloy.xyz/posts/leetcode230%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%AC%ACk%E5%B0%8F%E7%9A%84%E5%85%83%E7%B4%A0/</link>
    <pubDate>Mon, 04 Apr 2022 15:26:44 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.leyoubaloy.xyz/posts/leetcode230%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%AC%ACk%E5%B0%8F%E7%9A%84%E5%85%83%E7%B4%A0/</guid>
    <description><![CDATA[题目 https://leetcode-cn.com/problems/kth-smallest-element-in-a-bst/ 这是一道可拓展性很高的题目 题解 中序遍历递归法 最朴素的想法就是先中序遍历得到递增序列，然后返回序列的第k-1个元素。 可是我们只需要第k个]]></description>
</item><item>
    <title>Leetcode450:删除二叉搜索树中的节点</title>
    <link>https://www.leyoubaloy.xyz/posts/leetcode450%E5%88%A0%E9%99%A4%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/</link>
    <pubDate>Sat, 02 Apr 2022 10:20:05 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.leyoubaloy.xyz/posts/leetcode450%E5%88%A0%E9%99%A4%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9/</guid>
    <description><![CDATA[题目 https://leetcode-cn.com/problems/delete-node-in-a-bst/ 这道题完全可以当作一个知识点来对待。 题解 思路 众所周知，一颗二叉搜索树的中序遍历是一个递增序列，这是二叉搜索树最基本的性质之一。 某个节点]]></description>
</item><item>
    <title>Leetcode55:跳跃游戏——贪心</title>
    <link>https://www.leyoubaloy.xyz/posts/leetcode55%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F%E8%B4%AA%E5%BF%83/</link>
    <pubDate>Fri, 01 Apr 2022 16:03:13 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.leyoubaloy.xyz/posts/leetcode55%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F%E8%B4%AA%E5%BF%83/</guid>
    <description><![CDATA[题目 https://leetcode-cn.com/problems/jump-game/ 题解 所谓贪心算法，我个人浅薄的理解就是每一步找局部最优解，最终找到整体最优解。 那么这道题可以有这样的思路：从前往后遍历nums的元素，]]></description>
</item><item>
    <title>Leetcode198:打家劫舍——动态规划</title>
    <link>https://www.leyoubaloy.xyz/posts/leetcode198%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</link>
    <pubDate>Thu, 31 Mar 2022 16:20:49 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.leyoubaloy.xyz/posts/leetcode198%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/</guid>
    <description><![CDATA[题目 https://leetcode-cn.com/problems/house-robber/ 题解 看官方题解吧，官方题解写的真好。 感想 我是从去年CSP考试中知道动态规划这个概念的，当时考前自以为弄懂了（其实根本没弄懂），现在做了]]></description>
</item><item>
    <title>Leetcode113:路径总和——dfs、回溯</title>
    <link>https://www.leyoubaloy.xyz/posts/leetcode113%E8%B7%AF%E5%BE%84%E6%80%BB%E5%92%8Ciidfs%E5%9B%9E%E6%BA%AF/</link>
    <pubDate>Wed, 30 Mar 2022 19:19:10 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.leyoubaloy.xyz/posts/leetcode113%E8%B7%AF%E5%BE%84%E6%80%BB%E5%92%8Ciidfs%E5%9B%9E%E6%BA%AF/</guid>
    <description><![CDATA[题目 https://leetcode-cn.com/problems/path-sum-ii/ 题解 dfs无回溯 我们用深度优先搜索，在搜索时把当前路径记录下来为nums。如果满足 sum(nums)==targetSum； 该节点是叶]]></description>
</item><item>
    <title>Leetcode78:子集——递归、回溯——一道困扰我的题</title>
    <link>https://www.leyoubaloy.xyz/posts/leetcode78%E5%AD%90%E9%9B%86%E9%80%92%E5%BD%92%E5%9B%9E%E6%BA%AF%E4%B8%80%E9%81%93%E5%9B%B0%E6%89%B0%E6%88%91%E7%9A%84%E9%A2%98/</link>
    <pubDate>Tue, 29 Mar 2022 16:46:07 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.leyoubaloy.xyz/posts/leetcode78%E5%AD%90%E9%9B%86%E9%80%92%E5%BD%92%E5%9B%9E%E6%BA%AF%E4%B8%80%E9%81%93%E5%9B%B0%E6%89%B0%E6%88%91%E7%9A%84%E9%A2%98/</guid>
    <description><![CDATA[题目 https://leetcode-cn.com/problems/subsets/ 一道初中数学题，但是是很难的编程题。 题解 二进制枚举 ​ 集合a={5,2,9}中任何一个数有两种状态，在子集中或者不在子集中，分别用1和0]]></description>
</item><item>
    <title>今天逃课还被点名了qwq</title>
    <link>https://www.leyoubaloy.xyz/posts/%E4%BB%8A%E5%A4%A9%E9%80%83%E8%AF%BE%E8%BF%98%E8%A2%AB%E7%82%B9%E5%90%8D%E4%BA%86qwq/</link>
    <pubDate>Tue, 29 Mar 2022 09:36:46 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://www.leyoubaloy.xyz/posts/%E4%BB%8A%E5%A4%A9%E9%80%83%E8%AF%BE%E8%BF%98%E8%A2%AB%E7%82%B9%E5%90%8D%E4%BA%86qwq/</guid>
    <description><![CDATA[疫情期间的生活属实腐烂。老师不能来教室监督我们上课，食堂不能堂食，所以我天天呆在寝室，时间长了整个人都变得很低迷，学习的效率很低，每天干的最]]></description>
</item></channel>
</rss>
